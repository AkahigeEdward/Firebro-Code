<!DOCTYPE html>
<html lang="ro">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Calculator Preț Mentenanță Sisteme Detectie Incendiu</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
        }
        .calculator {
            max-width: 400px;
            margin: 0 auto;
            padding: 20px;
            border: 1px solid #ccc;
            border-radius: 10px;
            background-color: #f9f9f9;
        }
        .calculator label {
            display: block;
            margin-bottom: 10px;
            font-weight: bold;
        }
        .calculator select, .calculator input, .calculator button {
            width: 100%;
            padding: 10px;
            margin-bottom: 20px;
            border: 1px solid #ccc;
            border-radius: 5px;
            font-size: 16px;
        }
        .calculator button {
            background-color: #007bff;
            color: white;
            cursor: pointer;
        }
        .calculator button:hover {
            background-color: #0056b3;
        }
        .result {
            margin-top: 20px;
            font-size: 18px;
            font-weight: bold;
            text-align: center;
        }
        .additional-info {
            margin-top: 10px;
            font-size: 14px;
            color: #555;
        }
        .hidden {
            display: none;
        }
        .error-message {
            color: red;
            font-size: 14px;
            margin-top: -10px;
            margin-bottom: 10px;
        }
    </style>
</head>
<body>

<div class="calculator">
    <h2>Calculator Preț Mentenanță Sisteme Detectie Incendiu</h2>
    
    <form id="calculatorForm">
        <label for="producator">Producător:</label>
        <select id="producator" name="producator" required>
            <option value="securiton">Securiton</option>
            <option value="polon_alfa">Polon Alfa</option>
            <option value="esser">ESSER</option>
            <option value="schrack">SCHRACK</option>
            <option value="altul">Altul</option>
        </select>

        <div id="altProducatorContainer" class="hidden">
            <label for="altProducator">Nume producător:</label>
            <input type="text" id="altProducator" name="altProducator" placeholder="Introdu numele producătorului">
        </div>

        <label for="suprafata">Suprafața clădirii:</label>
        <select id="suprafata" name="suprafata" required>
            <option value="600-1000">600-1000 mp</option>
            <option value="1000-1500">1000-1500 mp</option>
            <option value="2000+">2000+ mp</option>
        </select>

        <label for="elemente">Număr elemente sistem:</label>
        <select id="elemente" name="elemente" required>
            <option value="0-25">0-25</option>
            <option value="25-50">25-50</option>
            <option value="50-100">50-100</option>
            <option value="100-200">100-200</option>
            <option value="200+">200+</option>
        </select>

        <label for="bucle">Număr bucle:</label>
        <select id="bucle" name="bucle" required>
            <option value="1">1</option>
            <option value="2">2</option>
            <option value="3">3</option>
            <option value="4">4</option>
            <option value="5+">5+</option>
        </select>

        <label for="email">Adresa de email:</label>
        <input type="email" id="email" name="email" placeholder="Introdu adresa ta de email" required>
        <div class="error-message" id="emailError"></div>

        <button type="submit" id="calculeazaButton">Calculează</button>
        <div class="result" id="rezultat"></div>
        <div class="additional-info" id="informatiiSuplimentare"></div>
    </form>
</div>

<script>
    // API Key de la Hunter.io (înlocuiește cu cheia ta)
    const HUNTER_API_KEY = '42cabbf6c8cc2a371ee42414aa7783e500675f62'; // Cheia ta API de la Hunter.io

    // Funcție pentru validarea email-ului folosind Hunter.io
    async function validateEmailWithHunter(email) {
        const url = `https://api.hunter.io/v2/email-verifier?email=${encodeURIComponent(email)}&api_key=${HUNTER_API_KEY}`;

        try {
            const response = await fetch(url);
            const data = await response.json();

            if (data.data.status === 'valid') {
                return true; // Email-ul este valid
            } else {
                return false; // Email-ul este invalid
            }
        } catch (error) {
            console.error('Eroare la verificarea email-ului:', error);
            return false; // În caz de eroare, consideră email-ul invalid
        }
    }

    document.getElementById('producator').addEventListener('change', function () {
        const altProducatorContainer = document.getElementById('altProducatorContainer');
        if (this.value === 'altul') {
            altProducatorContainer.classList.remove('hidden');
        } else {
            altProducatorContainer.classList.add('hidden');
        }
    });

    document.getElementById('calculatorForm').addEventListener('submit', async function (event) {
        event.preventDefault(); // Previne trimiterea implicită a formularului

        // Validează adresa de email
        const email = document.getElementById('email').value;
        const emailError = document.getElementById('emailError');

        // Verifică formatul email-ului
        const regex = /^[^\s@]+@[^\s@]+\.[^\s@]{2,}$/;
        if (!regex.test(email)) {
            emailError.textContent = 'Vă rugăm să introduceți o adresă de email validă (ex: nume@domeniu.com).';
            return; // Oprește trimiterea formularului dacă email-ul nu este valid
        }

        // Verifică email-ul folosind Hunter.io
        emailError.textContent = 'Se verifică adresa de email...';
        const isValidEmail = await validateEmailWithHunter(email);

        if (!isValidEmail) {
            emailError.textContent = 'Adresa de email nu este validă sau domeniul nu există.';
            return; // Oprește trimiterea formularului dacă email-ul nu este valid
        } else {
            emailError.textContent = ''; // Șterge mesajul de eroare dacă email-ul este valid
        }

        // Calculează prețul
        const suprafata = document.getElementById('suprafata').value;
        const elemente = document.getElementById('elemente').value;
        const rezultat = document.getElementById('rezultat');
        const informatiiSuplimentare = document.getElementById('informatiiSuplimentare');

        let pret = 0;
        let mesaj = '';

        if ((suprafata === '600-1000' || suprafata === '1000-1500') && (elemente === '0-25' || elemente === '25-50')) {
            pret = 200;
            mesaj = `Prețul estimat este: ${pret} euro.`;
        } else if (elemente === '50-100') {
            pret = 220;
            mesaj = `Prețul estimat este: ${pret} euro.`;
        } else if (elemente === '100-200') {
            pret = 250;
            mesaj = `Prețul estimat este: ${pret} euro.`;
        } else if (elemente === '200+' && suprafata === '2000+') {
            pret = 300;
            mesaj = `Prețul estimat este: ${pret} euro.`;
        } else if (elemente === '200+' || suprafata === '2000+') {
            mesaj = 'Prețul va fi stabilit în urma unei vizite pe teren.';
        }

        rezultat.innerHTML = mesaj;

        // Mesaj suplimentar
        if (pret > 0) {
            informatiiSuplimentare.innerHTML = `
                <p>Aceasta valoare este estimativă și nu ia în calcul parametrii precum cost transport / distanță; pentru o sumă cât mai exactă vă rugăm să ne contactați la: <a href="mailto:proiectare@firebrosecurity.com">proiectare@firebrosecurity.com</a> / 0747856736 sau dacă doriți să vă contactăm noi:</p>
                <label for="telefon">Număr de telefon:</label>
                <input type="text" id="telefon" name="telefon" placeholder="Introdu numărul dvs. de telefon">
                <button type="button" id="trimiteTelefon">Trimite</button>
            `;

            document.getElementById('trimiteTelefon').addEventListener('click', function () {
                const telefon = document.getElementById('telefon').value;
                if (telefon) {
                    const formData = new FormData(document.getElementById('calculatorForm'));
                    formData.append('pret', pret); // Adaugă prețul calculat
                    formData.append('telefon', telefon); // Adaugă numărul de telefon

                    fetch('https://formspree.io/f/xjkyyrzb', {
                        method: 'POST',
                        body: formData,
                        headers: {
                            'Accept': 'application/json'
                        }
                    })
                    .then(response => {
                        if (response.ok) {
                            alert('Datele au fost trimise cu succes!');
                        } else {
                            alert('A apărut o eroare la trimiterea datelor.');
                        }
                    })
                    .catch(error => {
                        console.error('Eroare:', error);
                        alert('A apărut o eroare la trimiterea datelor.');
                    });
                } else {
                    alert('Vă rugăm să introduceți numărul de telefon.');
                }
            });
        } else {
            informatiiSuplimentare.innerHTML = '';
        }

        // Trimite datele către Formspree folosind AJAX
        const formData = new FormData(this);
        fetch('https://formspree.io/f/xjkyyrzb', {
            method: 'POST',
            body: formData,
            headers: {
                'Accept': 'application/json'
            }
        })
        .then(response => {
            if (response.ok) {
                alert('Datele au fost trimise cu succes!');
            } else {
                alert('A apărut o eroare la trimiterea datelor.');
            }
        })
        .catch(error => {
            console.error('Eroare:', error);
            alert('A apărut o eroare la trimiterea datelor.');
        });
    });
</script>

</body>
</html>
